# NAME

Dist::Zilla::App::Command::critic - build your dist and run Perl::Critic on the built files.

# VERSION

version 0.001010

# DESCRIPTION

`critic` is an `App::Command` for [`Dist::Zilla`](https://metacpan.org/pod/Dist::Zilla) which streamlines running
[`Perl::Critic`](https://metacpan.org/pod/Perl::Critic) on your built distribution.

This competes with the likes of [`[Test::Perl::Critic]`](https://metacpan.org/pod/Dist::Zilla::Plugin::Test::Perl::Critic)
by:

- not requiring the rest of the steps in the test life-cycle to execute.
- not being impeded by the other tests cluttering your output.
- not suffering the limitations of `Test::Perl::Critic` which discards profile color settings.
- carefully formatting output to give a clearer visualization of where failures lie.
- not requiring your dist have a `Test::Perl::Critic` test pass for release.
- not requiring your dist to have any explicit `Perl::Critic` consumption.

Behaviorally:

    dzil critic

Behaves very similar to:

    dzil run --no-build perlcritic -p perlcritic.rc lib/

Except with improved verbosity of file name reporting.

# CONFIGURATION

This module has little configuration at this point.

`perlcritic.rc` is the name of the default profile to use, and it must be in your _BUILT_ tree to be used.

Alternatively, _IF_ you are using `[Test::Perl::Critic]` in your dist, the path specified to `perlcritic.rc` in that module
will be used.

# AUTHOR

Kent Fredric <kentnl@cpan.org>

# COPYRIGHT AND LICENSE

This software is copyright (c) 2015 by Kent Fredric <kentfredric@gmail.com>.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
